#include <sstream> // __str__

#include <functional>
#include <pybind11/pybind11.h>
#include <string>
#include "asmjit/asmjit.h"
#include "asmjit/arm.h"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>, false)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*, false)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_65(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	{ // asmjit::x86::EmitterExplicitT file: line:108
		pybind11::class_<asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>, std::shared_ptr<asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>>> cl(M("asmjit::x86"), "EmitterExplicitT_asmjit_x86_Emitter_t", "");
		cl.def( pybind11::init( [](){ return new asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>(); } ) );

		cl.def("gpz", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gpz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gpz(unsigned int) const --> class asmjit::x86::Gp", pybind11::arg("id"));
		cl.def("gpz", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gpz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gpz(const class asmjit::x86::Gp &) const --> class asmjit::x86::Gp", pybind11::arg("reg"));
		cl.def("zax", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zax() const --> class asmjit::x86::Gp");
		cl.def("zcx", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zcx() const --> class asmjit::x86::Gp");
		cl.def("zdx", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zdx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zdx() const --> class asmjit::x86::Gp");
		cl.def("zbx", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zbx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zbx() const --> class asmjit::x86::Gp");
		cl.def("zsp", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zsp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zsp() const --> class asmjit::x86::Gp");
		cl.def("zbp", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zbp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zbp() const --> class asmjit::x86::Gp");
		cl.def("zsi", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zsi() const --> class asmjit::x86::Gp");
		cl.def("zdi", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zdi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::zdi() const --> class asmjit::x86::Gp");
		cl.def("ptr_base", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, unsigned int const & a0) -> asmjit::x86::Mem { return o.ptr_base(a0); }, "", pybind11::arg("baseId"));
		cl.def("ptr_base", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, unsigned int const & a0, int const & a1) -> asmjit::x86::Mem { return o.ptr_base(a0, a1); }, "", pybind11::arg("baseId"), pybind11::arg("off"));
		cl.def("ptr_base", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned int, int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_base, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_base(unsigned int, int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("baseId"), pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zax", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zax(); }, "");
		cl.def("ptr_zax", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zax(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zax", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zax(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zcx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zcx(); }, "");
		cl.def("ptr_zcx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zcx(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zcx", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zcx(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zdx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zdx(); }, "");
		cl.def("ptr_zdx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zdx(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zdx", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zdx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zdx(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zbx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zbx(); }, "");
		cl.def("ptr_zbx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zbx(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zbx", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zbx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zbx(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zsp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zsp(); }, "");
		cl.def("ptr_zsp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zsp(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zsp", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zsp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zsp(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zbp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zbp(); }, "");
		cl.def("ptr_zbp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zbp(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zbp", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zbp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zbp(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zsi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zsi(); }, "");
		cl.def("ptr_zsi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zsi(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zsi", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zsi(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zdi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o) -> asmjit::x86::Mem { return o.ptr_zdi(); }, "");
		cl.def("ptr_zdi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zdi(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zdi", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zdi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptr_zdi(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::x86::Gp & a0) -> asmjit::x86::Mem { return o.intptr_ptr(a0); }, "", pybind11::arg("base"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::x86::Gp &, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Gp & a1) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Gp & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Vec & a1) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Vec & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::Label & a0) -> asmjit::x86::Mem { return o.intptr_ptr(a0); }, "", pybind11::arg("base"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::Label &, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::Label & a0, const class asmjit::x86::Gp & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &, const class asmjit::x86::Gp &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::Label &, const class asmjit::x86::Gp &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::Label & a0, const class asmjit::x86::Vec & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &, const class asmjit::x86::Vec &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::Label &, const class asmjit::x86::Vec &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, const class asmjit::x86::Rip & a0) -> asmjit::x86::Mem { return o.intptr_ptr(a0); }, "", pybind11::arg("rip"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Rip &, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(const class asmjit::x86::Rip &, int) const --> class asmjit::x86::Mem", pybind11::arg("rip"), pybind11::arg("offset"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned long) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(unsigned long) const --> class asmjit::x86::Mem", pybind11::arg("base"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, unsigned long const & a0, const class asmjit::x86::Gp & a1) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned long, const class asmjit::x86::Gp &, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr(unsigned long, const class asmjit::x86::Gp &, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr_abs", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned long) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr_abs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr_abs(unsigned long) const --> class asmjit::x86::Mem", pybind11::arg("base"));
		cl.def("intptr_ptr_abs", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> const &o, unsigned long const & a0, const class asmjit::x86::Gp & a1) -> asmjit::x86::Mem { return o.intptr_ptr_abs(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr_abs", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned long, const class asmjit::x86::Gp &, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr_abs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::intptr_ptr_abs(unsigned long, const class asmjit::x86::Gp &, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("db", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> &o, unsigned char const & a0) -> unsigned int { return o.db(a0); }, "", pybind11::arg("x"));
		cl.def("db", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned char, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::db, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::db(unsigned char, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("dw", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> &o, unsigned short const & a0) -> unsigned int { return o.dw(a0); }, "", pybind11::arg("x"));
		cl.def("dw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned short, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dw(unsigned short, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("dd", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> &o, unsigned int const & a0) -> unsigned int { return o.dd(a0); }, "", pybind11::arg("x"));
		cl.def("dd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned int, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dd(unsigned int, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("dq", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter> &o, unsigned long const & a0) -> unsigned int { return o.dq(a0); }, "", pybind11::arg("x"));
		cl.def("dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(unsigned long, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dq(unsigned long, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("short_", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::short_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::short_() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("long_", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::long_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::long_() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("mod_rm", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mod_rm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mod_rm() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("mod_mr", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mod_mr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mod_mr() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("taken", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::taken, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::taken() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("notTaken", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::notTaken, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::notTaken() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("lock", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lock, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lock() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("xacquire", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xacquire, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xacquire() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("xrelease", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrelease, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrelease() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("bnd", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bnd() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rep", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rep, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rep(const class asmjit::x86::Gp &) --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repe", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repe(const class asmjit::x86::Gp &) --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repz", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repz(const class asmjit::x86::Gp &) --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repne", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repne(const class asmjit::x86::Gp &) --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repnz", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::repnz(const class asmjit::x86::Gp &) --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("rex", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rex_b", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_b() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rex_x", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_x, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_x() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rex_r", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_r, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_r() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rex_w", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rex_w() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("vex", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vex() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("vex3", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vex3, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vex3() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("evex", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::evex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::evex() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("k", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::k, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::k(const class asmjit::x86::KReg &) --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic, pybind11::arg("kreg"));
		cl.def("z", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::z, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::z() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("sae", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sae() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rn_sae", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rn_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rn_sae() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rd_sae", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rd_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rd_sae() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("ru_sae", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ru_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ru_sae() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("rz_sae", (class asmjit::x86::Emitter & (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rz_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rz_sae() --> class asmjit::x86::Emitter &", pybind11::return_value_policy::automatic);
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adc(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::add(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::and_(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bound", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bound, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bound(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsf(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsf(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bsr(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bswap", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bswap, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bswap(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bt(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btc(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::btr(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bts(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cbw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("cdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cdq(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cdqe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cdqe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cdqe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("cqo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cqo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cqo(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cwd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cwde", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cwde, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cwde(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::call(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("cmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmov(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmova", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmova, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmova(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovae(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovbe(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmove", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmove, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmove(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovg(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovge(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovle(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovna(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnae(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnbe(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovne(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovng(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnge(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnle(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovno(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovns(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnz(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovo(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpe(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpo(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovs(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovz(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmov(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmova", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmova, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmova(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovae(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovb(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovbe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmove", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmove, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmove(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovg(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovge(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovl(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovle(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovna(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnae(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnb(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnbe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovne(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovng(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnge(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnl(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnle(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovno(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnp(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovns(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovnz(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovo(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovp(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovpo(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmovz(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmp(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmps(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmpxchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpxchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpxchg16b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg16b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg16b(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("cmpxchg8b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg8b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpxchg8b(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("dec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dec(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("dec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dec(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("inc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::inc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::inc(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("inc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::inc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::inc(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("j", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(enum asmjit::x86::CondCode, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::j, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::j(enum asmjit::x86::CondCode, const class asmjit::Label &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("ja", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ja, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ja(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jae(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jb(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jbe(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jc(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("je", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::je, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::je(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jg(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jge(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jl(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jle(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jna(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnae(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnb(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnbe(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnc(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jne(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jng(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnge(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnl(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnle(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jno(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnp(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jns(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnz(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jo(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jp(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpe(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpo(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("js", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::js, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::js(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jz(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("j", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(enum asmjit::x86::CondCode, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::j, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::j(enum asmjit::x86::CondCode, const class asmjit::Imm &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("ja", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ja, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ja(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jae(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jb(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jbe(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jc(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("je", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::je, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::je(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jg(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jge(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jl(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jle(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jna(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnae(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnb(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnbe(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnc(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jne(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jng(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnge(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnl(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnle(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jno(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnp(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jns(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jnz(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jo(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jp(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpe(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jpo(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("js", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::js, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::js(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jz(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jecxz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jecxz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jecxz(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("jecxz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jecxz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jecxz(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::jmp(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lcall(const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lcall(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lea", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lea, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lea(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ljmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ljmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ljmp(const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ljmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ljmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ljmp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lods", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lods, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lods(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loop(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loop(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loope", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loope, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loope(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loope", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loope, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loope(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loopne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loopne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loopne(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loopne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loopne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::loopne(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::CReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::CReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::CReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::CReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::DReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::DReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::DReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::DReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::Mem &, const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::SReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::SReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::SReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mov(const class asmjit::x86::SReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movabs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movabs(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movabs(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movnti", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movnti, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movnti(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movs(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsxd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsxd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsxd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsxd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsxd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsxd(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movzx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movzx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movzx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movzx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movzx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movzx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("neg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::neg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::neg(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("neg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::neg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::neg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop() --> unsigned int");
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::nop(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("not_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::not_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::not_(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("not_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::not_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::not_(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::or_(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pop(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("pop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pop(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("pop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pop(const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"));
		cl.def("popa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popa() --> unsigned int");
		cl.def("popad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popad() --> unsigned int");
		cl.def("popf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popf() --> unsigned int");
		cl.def("popfd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popfd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popfd() --> unsigned int");
		cl.def("popfq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popfq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popfq() --> unsigned int");
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push(const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"));
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::push(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("pusha", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pusha, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pusha() --> unsigned int");
		cl.def("pushad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushad() --> unsigned int");
		cl.def("pushf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushf() --> unsigned int");
		cl.def("pushfd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushfd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushfd() --> unsigned int");
		cl.def("pushfq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushfq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pushfq() --> unsigned int");
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcl(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcr(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rol(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ror(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sbb(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sal(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sar(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("scas", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::scas, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::scas(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("set", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::set, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::set(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("seta", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seta, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seta(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setae(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setbe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setc(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sete", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sete, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sete(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setg(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setge(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setl(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setle(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setna(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnae(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnbe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnc(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setne(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setng(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnge(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnl(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnle(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setno(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnp(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setns(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnz(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("seto", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seto, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seto(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setp(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpo(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sets", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sets, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sets(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setz(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("set", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::set, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::set(enum asmjit::x86::CondCode, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("seta", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seta, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seta(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setae(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setb(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setbe(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setc(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sete", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sete, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sete(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setge(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setl(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setle(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setna(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnae(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnb(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnbe(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnc(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setne(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setng(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnge(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnl(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnle(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setno(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setns(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setnz(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("seto", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seto, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::seto(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpe(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setpo(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sets", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sets, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sets(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setz(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shl(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shr(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shld(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("stos", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stos, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stos(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sub(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::test(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud0(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud0(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud1(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud1(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ud2() --> unsigned int");
		cl.def("xadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xadd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xchg(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xchg(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xchg(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xor_(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::imul(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aaa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aaa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aaa(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("aad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aad(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aam", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aam, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aam(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aas", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aas, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aas(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("daa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::daa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::daa(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("das", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::das, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::das(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("enter", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::enter, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::enter(const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("leave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::leave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::leave() --> unsigned int");
		cl.def("in", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::in, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::in(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("in", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::in, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::in(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ins", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ins, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ins(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("out", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::out, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::out(const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("out", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::out, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::out(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("outs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::outs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::outs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("clc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clc() --> unsigned int");
		cl.def("cld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cld() --> unsigned int");
		cl.def("cmc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmc() --> unsigned int");
		cl.def("stc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stc() --> unsigned int");
		cl.def("std", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::std, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::std() --> unsigned int");
		cl.def("adcx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adcx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adcx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adcx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adox", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adox, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adox(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adox", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adox, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::adox(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cpuid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cpuid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cpuid(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("lahf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lahf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lahf(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sahf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sahf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sahf(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("andn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andn(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("andn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andn(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bextr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bextr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bextr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bextr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bextr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bextr(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blsi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsi(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsr(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bzhi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bzhi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bzhi(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bzhi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bzhi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bzhi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mulx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("mulx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pdep", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pdep, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pdep(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pdep", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pdep, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pdep(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pext", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pext, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pext(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pext", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pext, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pext(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rorx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rorx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rorx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rorx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rorx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rorx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sarx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sarx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sarx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sarx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sarx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sarx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shlx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shlx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shlx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shlx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shlx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shlx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shrx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpbexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpbexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpbexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpbxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpbxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpbxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmplexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmplexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmplexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmplxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmplxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmplxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnbexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnbexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnbexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnbxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnbxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnbxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnlexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnlexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnlexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnlxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnlxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnlxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnoxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnoxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnoxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnpxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnpxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnpxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnsxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnsxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnsxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnzxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnzxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpnzxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpoxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpoxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpoxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmppxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmppxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmppxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpsxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpsxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpsxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpzxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpzxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpzxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cldemote", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cldemote, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cldemote(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clflush", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clflush, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clflush(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clflushopt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clflushopt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clflushopt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clwb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clwb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clwb(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clzero", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clzero, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clzero(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("crc32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::crc32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::crc32(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("crc32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::crc32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::crc32(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lfence", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lfence, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lfence() --> unsigned int");
		cl.def("mfence", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mfence, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mfence() --> unsigned int");
		cl.def("sfence", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sfence, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sfence() --> unsigned int");
		cl.def("lzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movbe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movbe(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdiri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdiri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdiri(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdir64b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdir64b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdir64b(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ldmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ldmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ldmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("stmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("popcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("popcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::popcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("prefetch", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetch, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetch(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchnta", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchnta, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchnta(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetcht0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetcht0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetcht0(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetcht1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetcht1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetcht1(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetcht2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetcht2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetcht2(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchwt1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchwt1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchwt1(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchit0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchit0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchit0(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::prefetchit1(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("aadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aand(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("axor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::axor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::axor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rdpid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpid(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdpru", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpru, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpru(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdpkru", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpkru, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpkru(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdtsc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdtsc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdtsc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rdtscp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdtscp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdtscp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("serialize", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::serialize, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::serialize() --> unsigned int");
		cl.def("blcfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcfill(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcfill(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blci", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blci, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blci(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blci", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blci, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blci(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcic(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcic(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcs(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blcs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsfill(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsfill(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsic(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blsic(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("t1mskc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::t1mskc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::t1mskc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("t1mskc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::t1mskc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::t1mskc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tzmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("arpl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::arpl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::arpl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("arpl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::arpl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::arpl(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cli", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cli, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cli() --> unsigned int");
		cl.def("getsec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::getsec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::getsec() --> unsigned int");
		cl.def("int_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::int_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::int_(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("int3", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::int3, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::int3() --> unsigned int");
		cl.def("into", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::into, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::into() --> unsigned int");
		cl.def("lar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lar(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lar(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lds(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("les", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::les, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::les(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lfs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lfs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lfs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lgs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lgs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lgs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lsl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lsl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lsl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lsl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lsl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lsl(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lss(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pause", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pause, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pause() --> unsigned int");
		cl.def("rsm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsm() --> unsigned int");
		cl.def("sgdt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sgdt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sgdt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sidt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sidt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sidt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sldt(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sldt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("smsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::smsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::smsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("smsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::smsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::smsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sti", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sti, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sti() --> unsigned int");
		cl.def("str", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::str, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::str(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("str", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::str, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::str(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verr(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::verw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdfsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdfsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdfsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdgsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdgsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdgsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("wrfsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrfsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrfsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("wrgsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrgsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrgsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxrstor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxrstor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxrstor(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxrstor64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxrstor64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxrstor64(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxsave(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxsave64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxsave64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxsave64(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xgetbv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xgetbv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xgetbv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstor64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstor64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstor64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstors", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstors, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstors(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstors64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstors64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xrstors64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsave(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsave64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsave64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsave64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsavec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsavec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsavec(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsavec64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsavec64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsavec64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaveopt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaveopt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaveopt(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaveopt64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaveopt64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaveopt64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaves", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaves, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaves(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaves64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaves64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsaves64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bndcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcl(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcl(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcn(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcn(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcu(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndcu(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndldx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndldx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndldx(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmk(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Bnd &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmov(const class asmjit::x86::Bnd &, const class asmjit::x86::Bnd &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmov(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndmov(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndstx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndstx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::bndstx(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("monitorx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::monitorx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::monitorx(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mwaitx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mwaitx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mwaitx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mcommit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mcommit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mcommit() --> unsigned int");
		cl.def("ptwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptwrite(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ptwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptwrite(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("enqcmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::enqcmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::enqcmd(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("enqcmds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::enqcmds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::enqcmds(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tpause", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tpause, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tpause(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("umonitor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::umonitor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::umonitor(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("umwait", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::umwait, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::umwait(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdrand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdrand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdrand(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdseed", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdseed, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdseed(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("llwpcb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::llwpcb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::llwpcb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lwpins", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpins, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpins(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("lwpins", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpins, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpins(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("lwpval", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpval, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpval(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("lwpval", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpval, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lwpval(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("slwpcb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::slwpcb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::slwpcb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xabort", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xabort, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xabort(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xbegin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xbegin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xbegin(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xbegin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xbegin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xbegin(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xend", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xend, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xend() --> unsigned int");
		cl.def("xtest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xtest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xtest() --> unsigned int");
		cl.def("xresldtrk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xresldtrk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xresldtrk() --> unsigned int");
		cl.def("xsusldtrk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsusldtrk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsusldtrk() --> unsigned int");
		cl.def("endbr32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::endbr32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::endbr32() --> unsigned int");
		cl.def("endbr64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::endbr64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::endbr64() --> unsigned int");
		cl.def("clrssbsy", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clrssbsy, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clrssbsy(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setssbsy", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setssbsy, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::setssbsy() --> unsigned int");
		cl.def("rstorssp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rstorssp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rstorssp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("saveprevssp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::saveprevssp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::saveprevssp() --> unsigned int");
		cl.def("incsspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::incsspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::incsspd(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("incsspq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::incsspq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::incsspq(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdsspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdsspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdsspd(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdsspq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdsspq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdsspq(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("wrssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrssq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssq(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrssq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrssq(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussq(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrussq(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hreset", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hreset, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hreset(const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("clui", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clui, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clui() --> unsigned int");
		cl.def("senduipi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::senduipi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::senduipi(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("testui", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::testui, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::testui() --> unsigned int");
		cl.def("stui", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stui, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stui() --> unsigned int");
		cl.def("uiret", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::uiret, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::uiret() --> unsigned int");
		cl.def("clts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clts() --> unsigned int");
		cl.def("hlt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hlt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hlt() --> unsigned int");
		cl.def("invd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invd() --> unsigned int");
		cl.def("invlpg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invlpg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invlpg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("invpcid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invpcid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invpcid(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lgdt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lgdt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lgdt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lidt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lidt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lidt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lldt(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lldt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lmsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lmsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lmsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lmsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lmsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lmsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ltr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ltr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ltr(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ltr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ltr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ltr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdmsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdmsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdmsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdpmc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpmc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rdpmc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("swapgs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::swapgs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::swapgs() --> unsigned int");
		cl.def("wbinvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wbinvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wbinvd() --> unsigned int");
		cl.def("wbnoinvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wbnoinvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wbnoinvd() --> unsigned int");
		cl.def("wrmsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrmsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::wrmsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsetbv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsetbv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xsetbv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("invlpgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invlpgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invlpgb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tlbsync", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tlbsync, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tlbsync() --> unsigned int");
		cl.def("monitor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::monitor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::monitor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mwait", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mwait, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mwait(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("clac", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clac, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clac() --> unsigned int");
		cl.def("stac", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stac, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stac() --> unsigned int");
		cl.def("skinit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::skinit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::skinit(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("stgi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stgi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::stgi() --> unsigned int");
		cl.def("psmash", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psmash, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psmash() --> unsigned int");
		cl.def("pvalidate", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pvalidate, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pvalidate() --> unsigned int");
		cl.def("rmpadjust", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rmpadjust, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rmpadjust() --> unsigned int");
		cl.def("rmpupdate", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rmpupdate, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rmpupdate() --> unsigned int");
		cl.def("invept", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invept, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invept(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("invvpid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invvpid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invvpid(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmcall() --> unsigned int");
		cl.def("vmclear", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmclear, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmclear(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmfunc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmfunc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmfunc() --> unsigned int");
		cl.def("vmlaunch", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmlaunch, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmlaunch() --> unsigned int");
		cl.def("vmptrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmptrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmptrld(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmptrst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmptrst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmptrst(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmread", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmread, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmread(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmread", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmread, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmread(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmresume", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmresume, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmresume() --> unsigned int");
		cl.def("vmwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmwrite(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmwrite(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmxoff", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmxoff, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmxoff() --> unsigned int");
		cl.def("vmxon", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmxon, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmxon(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clgi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clgi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::clgi() --> unsigned int");
		cl.def("invlpga", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invlpga, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::invlpga(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmload", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmload, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmload(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmmcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmmcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmmcall() --> unsigned int");
		cl.def("vmrun", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmrun, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmrun(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmsave(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmgexit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmgexit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmgexit() --> unsigned int");
		cl.def("f2xm1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::f2xm1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::f2xm1() --> unsigned int");
		cl.def("fabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fabs() --> unsigned int");
		cl.def("fadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fadd(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fadd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("faddp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::faddp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::faddp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("faddp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::faddp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::faddp() --> unsigned int");
		cl.def("fbld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fbld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fbld(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fbstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fbstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fbstp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fchs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fchs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fchs() --> unsigned int");
		cl.def("fclex", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fclex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fclex() --> unsigned int");
		cl.def("fcmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovb(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovbe(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmove", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmove, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmove(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovnb(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovnbe(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovne(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovnu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovnu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovnu(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcmovu(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcom(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcom() --> unsigned int");
		cl.def("fcom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcom(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomp() --> unsigned int");
		cl.def("fcomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcompp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcompp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcompp() --> unsigned int");
		cl.def("fcomi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomi(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcomip", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomip, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcomip(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcos", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcos, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fcos() --> unsigned int");
		cl.def("fdecstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdecstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdecstp() --> unsigned int");
		cl.def("fdiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdiv(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fdiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdiv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivp() --> unsigned int");
		cl.def("fdivr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivr(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fdivr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivrp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fdivrp() --> unsigned int");
		cl.def("ffree", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ffree, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ffree(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fiadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fiadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fiadd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ficom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ficom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ficom(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ficomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ficomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ficomp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fidiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fidiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fidiv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fidivr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fidivr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fidivr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fild", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fild, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fild(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fimul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fimul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fimul(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fincstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fincstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fincstp() --> unsigned int");
		cl.def("finit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::finit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::finit() --> unsigned int");
		cl.def("fisub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fisub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fisub(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fisubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fisubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fisubr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fninit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fninit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fninit() --> unsigned int");
		cl.def("fist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fist(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fistp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fistp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fistp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fisttp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fisttp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fisttp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fld(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fld(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fld1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fld1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fld1() --> unsigned int");
		cl.def("fldl2t", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldl2t, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldl2t() --> unsigned int");
		cl.def("fldl2e", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldl2e, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldl2e() --> unsigned int");
		cl.def("fldpi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldpi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldpi() --> unsigned int");
		cl.def("fldlg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldlg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldlg2() --> unsigned int");
		cl.def("fldln2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldln2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldln2() --> unsigned int");
		cl.def("fldz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldz() --> unsigned int");
		cl.def("fldcw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldcw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldcw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fldenv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldenv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fldenv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmul(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmul(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fmulp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmulp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmulp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fmulp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmulp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fmulp() --> unsigned int");
		cl.def("fnclex", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnclex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnclex() --> unsigned int");
		cl.def("fnop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnop() --> unsigned int");
		cl.def("fnsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnsave(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstenv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstenv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstenv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstcw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstcw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstcw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fpatan", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fpatan, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fpatan() --> unsigned int");
		cl.def("fprem", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fprem, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fprem() --> unsigned int");
		cl.def("fprem1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fprem1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fprem1() --> unsigned int");
		cl.def("fptan", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fptan, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fptan() --> unsigned int");
		cl.def("frndint", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::frndint, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::frndint() --> unsigned int");
		cl.def("frstor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::frstor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::frstor(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsave(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fscale", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fscale, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fscale() --> unsigned int");
		cl.def("fsin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsin() --> unsigned int");
		cl.def("fsincos", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsincos, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsincos() --> unsigned int");
		cl.def("fsqrt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsqrt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsqrt() --> unsigned int");
		cl.def("fst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fst(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fst(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstcw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstcw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstcw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstenv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstenv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstenv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsub(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsub(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubp() --> unsigned int");
		cl.def("fsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubr(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubrp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fsubrp() --> unsigned int");
		cl.def("ftst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ftst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ftst() --> unsigned int");
		cl.def("fucom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucom(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucom() --> unsigned int");
		cl.def("fucomi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomi(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucomip", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomip, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomip(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucomp() --> unsigned int");
		cl.def("fucompp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucompp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fucompp() --> unsigned int");
		cl.def("fwait", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fwait, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fwait() --> unsigned int");
		cl.def("fxam", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxam, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxam() --> unsigned int");
		cl.def("fxch", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxch, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxch(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxtract", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxtract, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fxtract() --> unsigned int");
		cl.def("fyl2x", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fyl2x, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fyl2x() --> unsigned int");
		cl.def("fyl2xp1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fyl2xp1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fyl2xp1() --> unsigned int");
		cl.def("fstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fstsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::fnstsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("addpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::addsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andnps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::andps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::blendvps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("comisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("comisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("comiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("comiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::comiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtdq2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpd2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtpi2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::cvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::divss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("dppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("dppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("dpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("dpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::dpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("extractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extractps(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("extractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extractps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("extrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("extrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::extrq(const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("haddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("haddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("haddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("haddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::haddps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::hsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("insertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("insertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("insertq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("insertq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::insertq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("lddqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lddqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::lddqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maskmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maskmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maskmovq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("maskmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maskmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maskmovdqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("maxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::maxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::minss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movapd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movapd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movapd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movaps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movaps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movaps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movddup(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movddup(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdq2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdq2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdq2q(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqa(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqa(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqa(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movdqu(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movhps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movlps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movmskps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movmskps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movmskps(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movmskpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movmskpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movmskpd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntdq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntdqa(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntsd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntss(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movntq(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movq2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movshdup(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movshdup(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsldup(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movsldup(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movss(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movupd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movupd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movupd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movups(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movups(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::movups(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mpsadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mpsadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::mulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::orps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packssdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packsswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packusdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packusdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::packuswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pabsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::paddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::palignr(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pand(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pandn(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendvb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendvb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pblendw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pclmulqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pclmulqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestri(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestri(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpestrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpeqw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpgtw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistri(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistri(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pcmpistrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrb(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrb(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrw(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrw(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pextrw(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phaddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phminposuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phminposuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::phsubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxub(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxud(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmaxuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminub(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminud(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pminuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovmskb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovmskb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovmskb(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovmskb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovmskb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovmskb(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovsxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmovzxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmullw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmuludq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::por(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslld(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pslldq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psllw(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrad(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psraw(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshuflw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshuflw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pshufw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psignw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrld(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrldq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psrlw(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::psubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptest(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ptest(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckhwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpckldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::punpcklwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pxor(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("roundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::roundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::rsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::shufps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::subss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpckhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::unpcklps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::xorps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pavgusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2id", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2id, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2id(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2id", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2id, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2id(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2iw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2iw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2iw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2iw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2iw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pf2iw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfadd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfadd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpeq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpeq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpeq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpeq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpeq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpeq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpge(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpge(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpgt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpgt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpgt(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpgt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpgt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfcmpgt(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmax", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmax(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmax", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmax(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmin(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmin(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmul(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfmul(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfpnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfpnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfpnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfpnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfpnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfpnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcp(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcp(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit2(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpit2(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpv(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrcpv(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrt(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrt(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrtv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrtv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrtv(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrtv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrtv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfrsqrtv(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsub(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsub(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsubr(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pfsubr(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pi2fw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pmulhrw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pswapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pswapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pswapd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pswapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pswapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::pswapd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("emms", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::emms, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::emms() --> unsigned int");
		cl.def("femms", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::femms, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::femms() --> unsigned int");
		cl.def("aesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdec(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdec(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdeclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesdeclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenc(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenc(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesenclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("aeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::aeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha1msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1nexte", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1nexte, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1nexte(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1nexte", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1nexte, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1nexte(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1rnds4(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha1rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha1rnds4(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha256msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256rnds2(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha256rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sha256rnds2(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineinvqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineinvqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8affineqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8mulb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("gf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::gf2p8mulb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kaddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kaddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kaddw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandnw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kandw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovb(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovd(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovq(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kmovw(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::knotw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("korb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::korb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::korb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kord(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("korq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::korq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::korq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kortestb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kortestd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kortestq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kortestw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kortestw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("korw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::korw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::korw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftlb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftld(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftlq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftlw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kshiftrw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("ktestb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ktestd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ktestq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ktestw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ktestw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kunpckbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kunpckbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kunpckbw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kunpckdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kunpckdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kunpckdq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kunpckwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kunpckwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kunpckwd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnorb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnorb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnorb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnord(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnorq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnorw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnorw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxnorw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxorb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxorb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxorb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxord(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxorq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxorw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxorw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::kxorw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("v4fmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fmaddps(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("v4fmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("v4fnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fnmaddps(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("v4fnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::v4fnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdec(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdec(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdeclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesdeclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenc(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenc(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesenclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vaesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vaeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("valignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("valignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("valignq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("valignq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::valignq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vandnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandnps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vandps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vblendvps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vbroadcastf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf128(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti128(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcasti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastsd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastsd(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastss(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbroadcastss(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmppd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpps(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsd(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpss(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompresspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompresspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompresspd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompresspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompresspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompresspd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompressps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompressps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompressps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompressps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompressps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcompressps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtne2ps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtne2ps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtne2ps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtne2ps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtne2ps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtne2ps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtneps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtps2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2ph(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtusi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdbpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdbpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdbpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdbpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdbpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdbpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdivpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdpbf16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpbf16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpbf16ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdpbf16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpbf16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpbf16ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vexp2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexp2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexp2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexp2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexp2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vexpandps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vextractf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf128(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf32x8(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x2(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractf64x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti128(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti32x8(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x2(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextracti64x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractps(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vextractps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfixupimmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfixupimmss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasspd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasspd(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassps(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassps(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssd(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssd(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassss(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassss(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherdpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherdpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherdps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherdps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherdps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherpf0dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf0dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf0qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf0qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf0qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherpf1qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherqpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherqpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherqps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherqps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgatherqps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexppd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineinvqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineinvqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8affineqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8mulb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgf2p8mulb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vhsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vinsertf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinserti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vinsertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vlddqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vlddqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vlddqu(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vldmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vldmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vldmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmaskmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovdqu(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaskmovps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovapd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovapd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovapd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovaps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovaps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovaps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovddup(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovddup(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa32(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa32(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa32(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa64(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa64(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqa64(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu16(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu16(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu32(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu32(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu32(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu64(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu64(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu64(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu8(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovdqu8(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovhlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovlhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovmskpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovmskpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovmskpd(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovmskps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovmskps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovmskps(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntdq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntdqa(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovntps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovshdup(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovshdup(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsldup(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsldup(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovss(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovupd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovupd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovupd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovups(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovups(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovups(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vmpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vmulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vp2intersectd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp2intersectd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp2intersectq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp2intersectq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp2intersectq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp4dpwssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp4dpwssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp4dpwssd(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vp4dpwssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp4dpwssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vp4dpwssds(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpabsw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpackssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackssdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackssdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpacksswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpacksswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpacksswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpacksswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpacksswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpacksswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackusdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackusdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackuswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpackuswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpalignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpalignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpalignr(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpalignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpalignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpalignr(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpand(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpand(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandn(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandn(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandnq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpavgw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendmw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendvb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendvb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpblendw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpbroadcastb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastb(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastd(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastmb2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastmb2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastmb2q(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastmw2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastmw2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastmw2d(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastq(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpbroadcastw(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpclmulqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpclmulqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpeqw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestri(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestri(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestrm(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpestrm(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpgtw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistri(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistri(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistrm(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpistrm(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpub(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpub(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpud(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpud(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpuw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmpw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcompressb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcompressw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpconflictq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpdpbusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vperm2f128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2f128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2f128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vperm2f128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2f128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2f128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vperm2i128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2i128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2i128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vperm2i128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2i128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vperm2i128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpermb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermi2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermt2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpexpandb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpexpandw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrb(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrb(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrw(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpextrw(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpgatherqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphminposuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphminposuw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vplzcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vplzcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vplzcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vplzcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vplzcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmadd52huq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52huq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52huq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmadd52huq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52huq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52huq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmadd52luq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52luq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52luq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmadd52luq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52luq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadd52luq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaddwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaskmovq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmaxuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpminuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmovb2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovb2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovb2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovd2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovd2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovd2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovdw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2b(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2d(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2q(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovm2w(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovmskb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovmskb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovmskb(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovq2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovq2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovq2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovqw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsdw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsqw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovswb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovsxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusdw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovusqw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovuswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovuswb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovw2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovw2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovw2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovwb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovwb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovwb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovwb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovwb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovwb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmovzxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhrsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhrsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulhw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmulld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmullw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmultishiftqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmultishiftqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmultishiftqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmultishiftqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmultishiftqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmultishiftqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuludq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmuludq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpopcntb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpopcntw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vporq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vporq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vporq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vporq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vporq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vporq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprold", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprold, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprold(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprold", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprold, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprold(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprolvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprord(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprorvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpscatterdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterdd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpscatterdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterdq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpscatterqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpscatterqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpscatterqq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpshldd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshldw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshrdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufbitqmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufbitqmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufbitqmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufbitqmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufbitqmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufbitqmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufhw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshufhw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshuflw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshuflw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsignw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpslldq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsravw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrldq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpternlogd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpternlogd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpternlogq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpternlogq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpternlogq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptest(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptest(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vptestmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vptestnmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckhwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpckldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpunpcklwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxorq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpxorq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrangepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangeps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangeps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangeps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangeps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangeps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangeps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrangess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrcp14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcp28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducepd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscalepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscalepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalepd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscaleps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscaleps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscalesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscalesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscaless", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaless, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaless(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscaless", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaless, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaless(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vroundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrsqrt14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrt28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscatterdpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterdpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterdpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vscatterdps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterdps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterdps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vscatterpf0dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf0dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf0qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf0qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf0qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterpf1qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterqpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterqpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterqpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vscatterqps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterqps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscatterqps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vshuff32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshuff32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshuff64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshuff64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshuff64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufi64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vshufps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vsqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vstmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vstmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vstmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vtestpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vtestpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vtestps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vtestps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vtestps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vunpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpckhps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vunpcklps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vxorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vzeroall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vzeroall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vzeroall() --> unsigned int");
		cl.def("vzeroupper", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vzeroupper, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vzeroupper() --> unsigned int");
		cl.def("vfmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfrczpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfrczss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmov(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmov(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcmov(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpcomuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpermil2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpermil2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vphaddbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddudq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddudq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddudq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddudq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddudq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphaddudq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphadduwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vphsubwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmacsdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmacssww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpmadcswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpperm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpperm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpperm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpperm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpperm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpperm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpperm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpperm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpperm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshab", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshab, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshab(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshab", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshab, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshab(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshab", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshab, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshab(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshad(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshad(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshad(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshaw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpshlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vbcstnebf162ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbcstnebf162ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbcstnebf162ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbcstnesh2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbcstnesh2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vbcstnesh2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneebf162ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneebf162ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneebf162ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneeph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneeph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneeph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneobf162ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneobf162ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneobf162ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneoph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneoph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtneoph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpdpbssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpbuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vpdpwuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsha512msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsha512msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsha512msg1(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsha512msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsha512msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsha512msg2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsha512rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsha512rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsha512rnds2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg1(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg1(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3msg2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3rnds2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vsm3rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm3rnds2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vsm4key4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4key4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4key4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm4key4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4key4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4key4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm4rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4rnds4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm4rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsm4rnds4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vaddsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcmpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpph(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpph(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsh(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcmpsh(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomish(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcomish(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtdq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtpd2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2psx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2psx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2psx(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2psx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2psx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2psx(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2phx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2phx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2phx(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2phx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2phx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtps2phx(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsd2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsd2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2sd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2sd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsh2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2ss(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2ss(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtsi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtss2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvttph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvttsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtudq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtusi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtusi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtuw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtuw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vcvtw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vdivph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vdivsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfcmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmaddsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmsubadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfnmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassph(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclassph(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssh(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vfpclasssh(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetexpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vgetmantsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vmaxph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmaxsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vminsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsh(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsh(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovsh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmovw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmulph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vmulsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrcpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreduceph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vreducesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscaleph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscaleph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscaleph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscalesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscalesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrndscalesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vrsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vscalefsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vsubsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vucomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomish(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::vucomish(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ldtilecfg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ldtilecfg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::ldtilecfg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sttilecfg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sttilecfg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::sttilecfg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("tileloadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tileloadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tileloadd(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tileloaddt1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tileloaddt1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tileloaddt1(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tilerelease", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tilerelease, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tilerelease() --> unsigned int");
		cl.def("tilestored", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tilestored, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tilestored(const class asmjit::x86::Mem &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tilezero", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tilezero, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tilezero(const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("tdpbf16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbf16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbf16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tcmmimfp16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tcmmimfp16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tcmmimfp16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tcmmrlfp16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tcmmrlfp16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tcmmrlfp16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpfp16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpfp16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpfp16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbssd(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbsud(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbusd(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Emitter>::tdpbuud(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
	}
}
