#include <sstream> // __str__

#include <functional>
#include <pybind11/pybind11.h>
#include <string>
#include "asmjit/asmjit.h"
#include "asmjit/arm.h"


#ifndef BINDER_PYBIND11_TYPE_CASTER
	#define BINDER_PYBIND11_TYPE_CASTER
	PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>, false)
	PYBIND11_DECLARE_HOLDER_TYPE(T, T*, false)
	PYBIND11_MAKE_OPAQUE(std::shared_ptr<void>)
#endif

void bind_unknown_unknown_70(std::function< pybind11::module &(std::string const &namespace_) > &M)
{
	{ // asmjit::x86::EmitterExplicitT file: line:108
		pybind11::class_<asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>, std::shared_ptr<asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>>> cl(M("asmjit::x86"), "EmitterExplicitT_asmjit_x86_Compiler_t", "");
		cl.def( pybind11::init( [](){ return new asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>(); } ) );

		cl.def("gpz", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gpz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gpz(unsigned int) const --> class asmjit::x86::Gp", pybind11::arg("id"));
		cl.def("gpz", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gpz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gpz(const class asmjit::x86::Gp &) const --> class asmjit::x86::Gp", pybind11::arg("reg"));
		cl.def("zax", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zax() const --> class asmjit::x86::Gp");
		cl.def("zcx", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zcx() const --> class asmjit::x86::Gp");
		cl.def("zdx", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zdx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zdx() const --> class asmjit::x86::Gp");
		cl.def("zbx", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zbx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zbx() const --> class asmjit::x86::Gp");
		cl.def("zsp", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zsp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zsp() const --> class asmjit::x86::Gp");
		cl.def("zbp", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zbp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zbp() const --> class asmjit::x86::Gp");
		cl.def("zsi", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zsi() const --> class asmjit::x86::Gp");
		cl.def("zdi", (class asmjit::x86::Gp (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)() const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zdi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::zdi() const --> class asmjit::x86::Gp");
		cl.def("ptr_base", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, unsigned int const & a0) -> asmjit::x86::Mem { return o.ptr_base(a0); }, "", pybind11::arg("baseId"));
		cl.def("ptr_base", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, unsigned int const & a0, int const & a1) -> asmjit::x86::Mem { return o.ptr_base(a0, a1); }, "", pybind11::arg("baseId"), pybind11::arg("off"));
		cl.def("ptr_base", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned int, int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_base, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_base(unsigned int, int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("baseId"), pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zax", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zax(); }, "");
		cl.def("ptr_zax", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zax(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zax", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zax(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zcx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zcx(); }, "");
		cl.def("ptr_zcx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zcx(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zcx", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zcx(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zdx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zdx(); }, "");
		cl.def("ptr_zdx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zdx(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zdx", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zdx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zdx(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zbx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zbx(); }, "");
		cl.def("ptr_zbx", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zbx(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zbx", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zbx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zbx(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zsp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zsp(); }, "");
		cl.def("ptr_zsp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zsp(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zsp", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zsp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zsp(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zbp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zbp(); }, "");
		cl.def("ptr_zbp", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zbp(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zbp", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zbp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zbp(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zsi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zsi(); }, "");
		cl.def("ptr_zsi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zsi(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zsi", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zsi(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("ptr_zdi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o) -> asmjit::x86::Mem { return o.ptr_zdi(); }, "");
		cl.def("ptr_zdi", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, int const & a0) -> asmjit::x86::Mem { return o.ptr_zdi(a0); }, "", pybind11::arg("off"));
		cl.def("ptr_zdi", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(int, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zdi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptr_zdi(int, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("off"), pybind11::arg("size"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::x86::Gp & a0) -> asmjit::x86::Mem { return o.intptr_ptr(a0); }, "", pybind11::arg("base"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::x86::Gp &, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Gp & a1) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Gp & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Vec & a1) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::x86::Gp & a0, const class asmjit::x86::Vec & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::Label & a0) -> asmjit::x86::Mem { return o.intptr_ptr(a0); }, "", pybind11::arg("base"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::Label &, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::Label & a0, const class asmjit::x86::Gp & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &, const class asmjit::x86::Gp &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::Label &, const class asmjit::x86::Gp &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::Label & a0, const class asmjit::x86::Vec & a1, unsigned int const & a2) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1, a2); }, "", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &, const class asmjit::x86::Vec &, unsigned int, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::Label &, const class asmjit::x86::Vec &, unsigned int, int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"), pybind11::arg("offset"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, const class asmjit::x86::Rip & a0) -> asmjit::x86::Mem { return o.intptr_ptr(a0); }, "", pybind11::arg("rip"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Rip &, int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(const class asmjit::x86::Rip &, int) const --> class asmjit::x86::Mem", pybind11::arg("rip"), pybind11::arg("offset"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned long) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(unsigned long) const --> class asmjit::x86::Mem", pybind11::arg("base"));
		cl.def("intptr_ptr", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, unsigned long const & a0, const class asmjit::x86::Gp & a1) -> asmjit::x86::Mem { return o.intptr_ptr(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned long, const class asmjit::x86::Gp &, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr(unsigned long, const class asmjit::x86::Gp &, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("intptr_ptr_abs", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned long) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr_abs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr_abs(unsigned long) const --> class asmjit::x86::Mem", pybind11::arg("base"));
		cl.def("intptr_ptr_abs", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> const &o, unsigned long const & a0, const class asmjit::x86::Gp & a1) -> asmjit::x86::Mem { return o.intptr_ptr_abs(a0, a1); }, "", pybind11::arg("base"), pybind11::arg("index"));
		cl.def("intptr_ptr_abs", (class asmjit::x86::Mem (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned long, const class asmjit::x86::Gp &, unsigned int) const) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr_abs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::intptr_ptr_abs(unsigned long, const class asmjit::x86::Gp &, unsigned int) const --> class asmjit::x86::Mem", pybind11::arg("base"), pybind11::arg("index"), pybind11::arg("shift"));
		cl.def("db", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> &o, unsigned char const & a0) -> unsigned int { return o.db(a0); }, "", pybind11::arg("x"));
		cl.def("db", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned char, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::db, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::db(unsigned char, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("dw", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> &o, unsigned short const & a0) -> unsigned int { return o.dw(a0); }, "", pybind11::arg("x"));
		cl.def("dw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned short, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dw(unsigned short, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("dd", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> &o, unsigned int const & a0) -> unsigned int { return o.dd(a0); }, "", pybind11::arg("x"));
		cl.def("dd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned int, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dd(unsigned int, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("dq", [](asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler> &o, unsigned long const & a0) -> unsigned int { return o.dq(a0); }, "", pybind11::arg("x"));
		cl.def("dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(unsigned long, unsigned long)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dq(unsigned long, unsigned long) --> unsigned int", pybind11::arg("x"), pybind11::arg("repeatCount"));
		cl.def("short_", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::short_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::short_() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("long_", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::long_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::long_() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("mod_rm", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mod_rm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mod_rm() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("mod_mr", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mod_mr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mod_mr() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("taken", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::taken, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::taken() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("notTaken", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::notTaken, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::notTaken() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("lock", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lock, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lock() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("xacquire", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xacquire, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xacquire() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("xrelease", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrelease, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrelease() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("bnd", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bnd() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rep", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rep, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rep(const class asmjit::x86::Gp &) --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repe", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repe(const class asmjit::x86::Gp &) --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repz", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repz(const class asmjit::x86::Gp &) --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repne", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repne(const class asmjit::x86::Gp &) --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("repnz", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::repnz(const class asmjit::x86::Gp &) --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic, pybind11::arg("zcx"));
		cl.def("rex", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rex_b", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_b() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rex_x", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_x, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_x() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rex_r", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_r, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_r() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rex_w", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rex_w() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("vex", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vex() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("vex3", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vex3, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vex3() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("evex", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::evex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::evex() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("k", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::k, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::k(const class asmjit::x86::KReg &) --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic, pybind11::arg("kreg"));
		cl.def("z", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::z, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::z() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("sae", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sae() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rn_sae", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rn_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rn_sae() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rd_sae", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rd_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rd_sae() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("ru_sae", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ru_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ru_sae() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("rz_sae", (class asmjit::x86::Compiler & (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rz_sae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rz_sae() --> class asmjit::x86::Compiler &", pybind11::return_value_policy::automatic);
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adc(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("add", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::add(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("and_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::and_(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bound", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bound, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bound(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsf(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsf(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bsr(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bswap", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bswap, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bswap(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bt(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btc(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("btr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::btr(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bts(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cbw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("cdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cdq(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cdqe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cdqe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cdqe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("cqo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cqo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cqo(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cwd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cwde", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cwde, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cwde(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("call", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::call(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("cmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmov(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmova", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmova, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmova(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovae(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovbe(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmove", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmove, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmove(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovg(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovge(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovle(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovna(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnae(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnbe(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovne(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovng(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnge(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnle(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovno(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovns(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnz(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovo(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpe(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpo(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovs(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovz(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmov(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmova", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmova, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmova(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovae(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovb(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovbe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmove", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmove, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmove(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovg(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovge(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovl(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovle(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovna(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnae(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnb(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnbe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovne(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovng(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnge(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnl(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnle(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovno(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnp(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovns(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovnz(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovo(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovp(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovpo(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmovz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmovz(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmp(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmps(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cmpxchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpxchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpxchg16b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg16b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg16b(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("cmpxchg8b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg8b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpxchg8b(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("dec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dec(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("dec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dec(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("div", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::div(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("idiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::idiv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("inc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::inc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::inc(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("inc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::inc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::inc(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("j", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(enum asmjit::x86::CondCode, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::j, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::j(enum asmjit::x86::CondCode, const class asmjit::Label &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("ja", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ja, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ja(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jae(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jb(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jbe(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jc(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("je", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::je, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::je(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jg(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jge(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jl(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jle(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jna(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnae(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnb(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnbe(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnc(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jne(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jng(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnge(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnl(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnle(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jno(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnp(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jns(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnz(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jo(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jp(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpe(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpo(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("js", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::js, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::js(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jz(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("j", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(enum asmjit::x86::CondCode, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::j, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::j(enum asmjit::x86::CondCode, const class asmjit::Imm &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("ja", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ja, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ja(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jae(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jb(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jbe(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jc(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("je", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::je, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::je(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jg(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jge(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jl(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jle(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jna(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnae(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnb(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnbe(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnc(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jne(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jng(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnge(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnl(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnle(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jno(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnp(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jns(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jnz(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jo(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jp(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpe(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jpo(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("js", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::js, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::js(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jz(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jecxz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jecxz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jecxz(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("jecxz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jecxz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jecxz(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("jmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::jmp(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lcall(const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lcall(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lea", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lea, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lea(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ljmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ljmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ljmp(const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ljmp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ljmp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ljmp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lods", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lods, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lods(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loop(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loop(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loope", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loope, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loope(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loope", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loope, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loope(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loopne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loopne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loopne(const class asmjit::x86::Gp &, const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("loopne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loopne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::loopne(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::CReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::CReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::CReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::CReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::DReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::DReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::DReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::DReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Gp &, const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::Mem &, const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::SReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::SReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::SReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mov(const class asmjit::x86::SReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movabs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movabs(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movabs(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movnti", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movnti, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movnti(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movs(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsxd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsxd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsxd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsxd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsxd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsxd(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movzx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movzx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movzx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movzx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movzx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movzx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mul(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("neg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::neg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::neg(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("neg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::neg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::neg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop() --> unsigned int");
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("nop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::nop(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("not_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::not_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::not_(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("not_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::not_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::not_(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("or_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::or_(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pop(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("pop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pop(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("pop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pop(const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"));
		cl.def("popa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popa() --> unsigned int");
		cl.def("popad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popad() --> unsigned int");
		cl.def("popf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popf() --> unsigned int");
		cl.def("popfd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popfd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popfd() --> unsigned int");
		cl.def("popfq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popfq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popfq() --> unsigned int");
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::SReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push(const class asmjit::x86::SReg &) --> unsigned int", pybind11::arg("o0"));
		cl.def("push", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::push(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("pusha", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pusha, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pusha() --> unsigned int");
		cl.def("pushad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushad() --> unsigned int");
		cl.def("pushf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushf() --> unsigned int");
		cl.def("pushfd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushfd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushfd() --> unsigned int");
		cl.def("pushfq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushfq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pushfq() --> unsigned int");
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcl(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcr(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rol", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rol(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ror", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ror(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sbb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sbb(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sal", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sal(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sar(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("scas", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::scas, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::scas(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("set", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::set, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::set(enum asmjit::x86::CondCode, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("seta", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seta, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seta(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setae(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setbe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setc(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sete", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sete, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sete(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setg(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setge(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setl(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setle(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setna(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnae(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnbe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnc(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setne(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setng(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnge(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnl(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnle(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setno(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnp(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setns(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnz(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("seto", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seto, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seto(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setp(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpe(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpo(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sets", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sets, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sets(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setz(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("set", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(enum asmjit::x86::CondCode, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::set, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::set(enum asmjit::x86::CondCode, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("cc"), pybind11::arg("o0"));
		cl.def("seta", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seta, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seta(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setae(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setb(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setbe(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setc(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sete", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sete, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sete(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setge(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setl(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setle(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setna", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setna, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setna(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnae", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnae, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnae(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnb(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnbe(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnc(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setne(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setng", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setng, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setng(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnge(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnl(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnle", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnle, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnle(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setno", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setno, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setno(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setns", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setns, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setns(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setnz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setnz(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("seto", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seto, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::seto(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpe(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setpo", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpo, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setpo(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sets", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sets, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sets(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setz(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shl(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shr(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shld(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("stos", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stos, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stos(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sub(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("test", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::test(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud0(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud0(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud1(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud1(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ud2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ud2() --> unsigned int");
		cl.def("xadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xadd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xchg(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xchg(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xchg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xchg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xchg(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xor_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xor_(const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("imul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::imul(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aaa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aaa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aaa(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("aad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aad(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aam", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aam, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aam(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aas", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aas, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aas(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("daa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::daa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::daa(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("das", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::das, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::das(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("enter", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::enter, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::enter(const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("leave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::leave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::leave() --> unsigned int");
		cl.def("in", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::in, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::in(const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("in", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::in, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::in(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ins", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ins, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ins(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("out", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::out, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::out(const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("out", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::out, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::out(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("outs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::outs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::outs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("clc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clc() --> unsigned int");
		cl.def("cld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cld() --> unsigned int");
		cl.def("cmc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmc() --> unsigned int");
		cl.def("stc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stc() --> unsigned int");
		cl.def("std", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::std, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::std() --> unsigned int");
		cl.def("adcx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adcx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adcx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adcx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adcx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adox", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adox, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adox(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("adox", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adox, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::adox(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cpuid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cpuid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cpuid(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("lahf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lahf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lahf(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sahf", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sahf, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sahf(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("andn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andn(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("andn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andn(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bextr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bextr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bextr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bextr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bextr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bextr(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blsi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsi(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsr(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bzhi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bzhi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bzhi(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bzhi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bzhi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bzhi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mulx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("mulx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pdep", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pdep, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pdep(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pdep", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pdep, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pdep(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pext", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pext, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pext(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pext", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pext, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pext(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rorx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rorx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rorx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rorx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rorx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rorx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sarx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sarx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sarx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sarx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sarx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sarx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shlx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shlx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shlx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shlx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shlx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shlx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shrx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shrx(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpbexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpbexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpbexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpbxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpbxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpbxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmplexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmplexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmplexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmplxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmplxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmplxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnbexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnbexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnbexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnbxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnbxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnbxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnlexadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnlexadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnlexadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnlxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnlxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnlxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnoxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnoxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnoxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnpxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnpxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnpxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnsxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnsxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnsxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpnzxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnzxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpnzxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpoxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpoxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpoxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmppxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmppxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmppxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpsxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpsxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpsxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpzxadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpzxadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpzxadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cldemote", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cldemote, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cldemote(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clflush", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clflush, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clflush(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clflushopt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clflushopt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clflushopt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clwb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clwb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clwb(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clzero", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clzero, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clzero(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("crc32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::crc32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::crc32(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("crc32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::crc32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::crc32(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lfence", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lfence, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lfence() --> unsigned int");
		cl.def("mfence", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mfence, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mfence() --> unsigned int");
		cl.def("sfence", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sfence, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sfence() --> unsigned int");
		cl.def("lzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lzcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lzcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lzcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movbe(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movbe(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdiri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdiri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdiri(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdir64b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdir64b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdir64b(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ldmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ldmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ldmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("stmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("popcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("popcnt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popcnt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::popcnt(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("prefetch", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetch, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetch(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchnta", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchnta, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchnta(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetcht0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetcht0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetcht0(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetcht1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetcht1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetcht1(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetcht2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetcht2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetcht2(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchwt1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchwt1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchwt1(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchit0", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchit0, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchit0(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("prefetchit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::prefetchit1(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("aadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aadd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aand(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("axor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::axor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::axor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rdpid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpid(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdpru", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpru, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpru(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdpkru", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpkru, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpkru(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdtsc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdtsc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdtsc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rdtscp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdtscp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdtscp(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("serialize", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::serialize, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::serialize() --> unsigned int");
		cl.def("blcfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcfill(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcfill(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blci", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blci, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blci(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blci", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blci, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blci(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcic(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcic(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcs(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blcs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blcs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsfill(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsfill", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsfill, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsfill(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsic(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blsic", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsic, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blsic(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("t1mskc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::t1mskc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::t1mskc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("t1mskc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::t1mskc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::t1mskc(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tzmsk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzmsk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tzmsk(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("arpl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::arpl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::arpl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("arpl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::arpl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::arpl(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cli", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cli, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cli() --> unsigned int");
		cl.def("getsec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::getsec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::getsec() --> unsigned int");
		cl.def("int_", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::int_, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::int_(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("int3", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::int3, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::int3() --> unsigned int");
		cl.def("into", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::into, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::into() --> unsigned int");
		cl.def("lar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lar(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lar", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lar, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lar(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lds(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("les", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::les, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::les(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lfs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lfs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lfs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lgs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lgs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lgs(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lsl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lsl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lsl(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lsl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lsl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lsl(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lss(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pause", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pause, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pause() --> unsigned int");
		cl.def("rsm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsm() --> unsigned int");
		cl.def("sgdt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sgdt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sgdt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sidt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sidt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sidt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sldt(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sldt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("smsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::smsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::smsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("smsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::smsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::smsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sti", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sti, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sti() --> unsigned int");
		cl.def("str", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::str, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::str(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("str", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::str, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::str(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verr(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("verw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::verw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdfsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdfsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdfsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdgsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdgsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdgsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("wrfsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrfsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrfsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("wrgsbase", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrgsbase, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrgsbase(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxrstor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxrstor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxrstor(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxrstor64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxrstor64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxrstor64(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxsave(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxsave64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxsave64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxsave64(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xgetbv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xgetbv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xgetbv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstor64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstor64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstor64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstors", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstors, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstors(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xrstors64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstors64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xrstors64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsave(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsave64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsave64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsave64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsavec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsavec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsavec(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsavec64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsavec64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsavec64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaveopt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaveopt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaveopt(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaveopt64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaveopt64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaveopt64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaves", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaves, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaves(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsaves64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaves64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsaves64(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("bndcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcl(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcl", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcl, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcl(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcn(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcn(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcu(const class asmjit::x86::Bnd &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndcu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndcu(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndldx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndldx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndldx(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmk(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Bnd &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmov(const class asmjit::x86::Bnd &, const class asmjit::x86::Bnd &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmov(const class asmjit::x86::Bnd &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndmov(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("bndstx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndstx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::bndstx(const class asmjit::x86::Mem &, const class asmjit::x86::Bnd &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("monitorx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::monitorx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::monitorx(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mwaitx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mwaitx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mwaitx(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mcommit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mcommit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mcommit() --> unsigned int");
		cl.def("ptwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptwrite(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ptwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptwrite(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("enqcmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::enqcmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::enqcmd(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("enqcmds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::enqcmds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::enqcmds(const class asmjit::x86::Mem &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tpause", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tpause, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tpause(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("umonitor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::umonitor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::umonitor(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("umwait", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::umwait, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::umwait(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdrand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdrand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdrand(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdseed", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdseed, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdseed(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("llwpcb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::llwpcb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::llwpcb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lwpins", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpins, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpins(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("lwpins", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpins, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpins(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("lwpval", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpval, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpval(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("lwpval", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpval, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lwpval(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("slwpcb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::slwpcb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::slwpcb(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xabort", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xabort, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xabort(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xbegin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Label &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xbegin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xbegin(const class asmjit::Label &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xbegin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xbegin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xbegin(const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("xend", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xend, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xend() --> unsigned int");
		cl.def("xtest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xtest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xtest() --> unsigned int");
		cl.def("xresldtrk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xresldtrk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xresldtrk() --> unsigned int");
		cl.def("xsusldtrk", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsusldtrk, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsusldtrk() --> unsigned int");
		cl.def("endbr32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::endbr32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::endbr32() --> unsigned int");
		cl.def("endbr64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::endbr64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::endbr64() --> unsigned int");
		cl.def("clrssbsy", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clrssbsy, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clrssbsy(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("setssbsy", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setssbsy, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::setssbsy() --> unsigned int");
		cl.def("rstorssp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rstorssp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rstorssp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("saveprevssp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::saveprevssp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::saveprevssp() --> unsigned int");
		cl.def("incsspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::incsspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::incsspd(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("incsspq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::incsspq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::incsspq(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdsspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdsspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdsspd(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdsspq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdsspq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdsspq(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("wrssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrssq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssq(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrssq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrssq(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussd(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussd(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussq(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("wrussq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrussq(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hreset", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hreset, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hreset(const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("clui", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clui, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clui() --> unsigned int");
		cl.def("senduipi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::senduipi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::senduipi(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("testui", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::testui, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::testui() --> unsigned int");
		cl.def("stui", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stui, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stui() --> unsigned int");
		cl.def("uiret", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::uiret, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::uiret() --> unsigned int");
		cl.def("clts", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clts, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clts() --> unsigned int");
		cl.def("hlt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hlt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hlt() --> unsigned int");
		cl.def("invd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invd() --> unsigned int");
		cl.def("invlpg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invlpg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invlpg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("invpcid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invpcid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invpcid(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("lgdt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lgdt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lgdt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lidt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lidt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lidt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lldt(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lldt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lldt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lldt(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lmsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lmsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lmsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("lmsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lmsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lmsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ltr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ltr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ltr(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ltr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ltr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ltr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("rdmsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdmsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdmsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rdpmc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpmc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rdpmc(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("swapgs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::swapgs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::swapgs() --> unsigned int");
		cl.def("wbinvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wbinvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wbinvd() --> unsigned int");
		cl.def("wbnoinvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wbnoinvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wbnoinvd() --> unsigned int");
		cl.def("wrmsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrmsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::wrmsr(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("xsetbv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsetbv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xsetbv(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("invlpgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invlpgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invlpgb(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tlbsync", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tlbsync, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tlbsync() --> unsigned int");
		cl.def("monitor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::monitor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::monitor(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mwait", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mwait, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mwait(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("clac", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clac, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clac() --> unsigned int");
		cl.def("stac", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stac, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stac() --> unsigned int");
		cl.def("skinit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::skinit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::skinit(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("stgi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stgi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::stgi() --> unsigned int");
		cl.def("psmash", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psmash, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psmash() --> unsigned int");
		cl.def("pvalidate", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pvalidate, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pvalidate() --> unsigned int");
		cl.def("rmpadjust", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rmpadjust, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rmpadjust() --> unsigned int");
		cl.def("rmpupdate", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rmpupdate, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rmpupdate() --> unsigned int");
		cl.def("invept", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invept, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invept(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("invvpid", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invvpid, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invvpid(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmcall() --> unsigned int");
		cl.def("vmclear", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmclear, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmclear(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmfunc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmfunc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmfunc() --> unsigned int");
		cl.def("vmlaunch", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmlaunch, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmlaunch() --> unsigned int");
		cl.def("vmptrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmptrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmptrld(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmptrst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmptrst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmptrst(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmread", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmread, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmread(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmread", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmread, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmread(const class asmjit::x86::Mem &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmresume", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmresume, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmresume() --> unsigned int");
		cl.def("vmwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmwrite(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmwrite", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmwrite, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmwrite(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmxoff", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmxoff, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmxoff() --> unsigned int");
		cl.def("vmxon", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmxon, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmxon(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("clgi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clgi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::clgi() --> unsigned int");
		cl.def("invlpga", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invlpga, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::invlpga(const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmload", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmload, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmload(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmmcall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmmcall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmmcall() --> unsigned int");
		cl.def("vmrun", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmrun, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmrun(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmsave(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmgexit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmgexit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmgexit() --> unsigned int");
		cl.def("f2xm1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::f2xm1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::f2xm1() --> unsigned int");
		cl.def("fabs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fabs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fabs() --> unsigned int");
		cl.def("fadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fadd(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fadd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("faddp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::faddp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::faddp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("faddp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::faddp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::faddp() --> unsigned int");
		cl.def("fbld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fbld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fbld(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fbstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fbstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fbstp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fchs", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fchs, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fchs() --> unsigned int");
		cl.def("fclex", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fclex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fclex() --> unsigned int");
		cl.def("fcmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovb(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovbe(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmove", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmove, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmove(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovnb(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovnbe", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovnbe, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovnbe(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovne", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovne, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovne(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovnu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovnu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovnu(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcmovu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcmovu(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcom(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcom() --> unsigned int");
		cl.def("fcom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcom(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomp() --> unsigned int");
		cl.def("fcomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcompp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcompp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcompp() --> unsigned int");
		cl.def("fcomi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomi(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcomip", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomip, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcomip(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fcos", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcos, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fcos() --> unsigned int");
		cl.def("fdecstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdecstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdecstp() --> unsigned int");
		cl.def("fdiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdiv(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fdiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdiv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivp() --> unsigned int");
		cl.def("fdivr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivr(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fdivr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivrp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fdivrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fdivrp() --> unsigned int");
		cl.def("ffree", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ffree, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ffree(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fiadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fiadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fiadd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ficom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ficom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ficom(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("ficomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ficomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ficomp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fidiv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fidiv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fidiv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fidivr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fidivr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fidivr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fild", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fild, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fild(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fimul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fimul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fimul(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fincstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fincstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fincstp() --> unsigned int");
		cl.def("finit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::finit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::finit() --> unsigned int");
		cl.def("fisub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fisub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fisub(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fisubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fisubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fisubr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fninit", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fninit, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fninit() --> unsigned int");
		cl.def("fist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fist(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fistp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fistp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fistp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fisttp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fisttp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fisttp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fld(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fld(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fld1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fld1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fld1() --> unsigned int");
		cl.def("fldl2t", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldl2t, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldl2t() --> unsigned int");
		cl.def("fldl2e", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldl2e, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldl2e() --> unsigned int");
		cl.def("fldpi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldpi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldpi() --> unsigned int");
		cl.def("fldlg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldlg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldlg2() --> unsigned int");
		cl.def("fldln2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldln2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldln2() --> unsigned int");
		cl.def("fldz", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldz, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldz() --> unsigned int");
		cl.def("fldcw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldcw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldcw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fldenv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldenv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fldenv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmul(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmul(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fmulp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmulp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmulp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fmulp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmulp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fmulp() --> unsigned int");
		cl.def("fnclex", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnclex, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnclex() --> unsigned int");
		cl.def("fnop", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnop, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnop() --> unsigned int");
		cl.def("fnsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnsave(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstenv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstenv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstenv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstcw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstcw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstcw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fpatan", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fpatan, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fpatan() --> unsigned int");
		cl.def("fprem", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fprem, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fprem() --> unsigned int");
		cl.def("fprem1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fprem1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fprem1() --> unsigned int");
		cl.def("fptan", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fptan, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fptan() --> unsigned int");
		cl.def("frndint", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::frndint, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::frndint() --> unsigned int");
		cl.def("frstor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::frstor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::frstor(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsave", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsave, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsave(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fscale", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fscale, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fscale() --> unsigned int");
		cl.def("fsin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsin() --> unsigned int");
		cl.def("fsincos", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsincos, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsincos() --> unsigned int");
		cl.def("fsqrt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsqrt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsqrt() --> unsigned int");
		cl.def("fst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fst(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fst(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstp(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstcw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstcw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstcw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstenv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstenv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstenv(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsub(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsub(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubp() --> unsigned int");
		cl.def("fsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &, const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubr(const class asmjit::x86::St &, const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("fsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubrp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fsubrp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubrp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fsubrp() --> unsigned int");
		cl.def("ftst", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ftst, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ftst() --> unsigned int");
		cl.def("fucom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucom(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucom", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucom, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucom() --> unsigned int");
		cl.def("fucomi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomi(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucomip", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomip, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomip(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomp(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fucomp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucomp() --> unsigned int");
		cl.def("fucompp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucompp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fucompp() --> unsigned int");
		cl.def("fwait", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fwait, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fwait() --> unsigned int");
		cl.def("fxam", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxam, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxam() --> unsigned int");
		cl.def("fxch", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::St &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxch, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxch(const class asmjit::x86::St &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fxtract", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxtract, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fxtract() --> unsigned int");
		cl.def("fyl2x", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fyl2x, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fyl2x() --> unsigned int");
		cl.def("fyl2xp1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fyl2xp1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fyl2xp1() --> unsigned int");
		cl.def("fstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fstsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstsw(const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"));
		cl.def("fnstsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::fnstsw(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("addpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("addsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::addsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andnps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("andps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::andps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("blendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("blendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::blendvps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("cmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("comisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("comisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("comiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("comiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::comiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtdq2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpd2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtpi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtpi2ps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttpd2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttps2pi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2pi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttps2pi(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("cvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::cvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("divss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::divss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("dppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("dppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dppd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("dpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("dpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::dpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("extractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extractps(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("extractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extractps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("extrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("extrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::extrq(const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("haddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("haddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("haddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("haddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::haddps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("hsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::hsubps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("insertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("insertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("insertq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("insertq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::insertq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("lddqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lddqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::lddqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maskmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maskmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maskmovq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("maskmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maskmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maskmovdqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("maxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("maxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::maxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("minss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::minss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movapd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movapd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movapd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movaps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movaps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movaps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movddup(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movddup(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdq2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdq2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdq2q(const class asmjit::x86::Mm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqa(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqa(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqa(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqu(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movdqu(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movhps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movlps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movmskps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movmskps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movmskps(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movmskpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movmskpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movmskpd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntdq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntdqa(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntsd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntss(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movntq(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Mem &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movq2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movq2dq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movshdup(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movshdup(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsldup(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movsldup(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movss(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movupd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movupd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movupd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movups(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movups(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("movups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::movups(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mpsadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mpsadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("mulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("mulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::mulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("orps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::orps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packssdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packsswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packsswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packusdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packusdw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("packuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::packuswb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pabsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("paddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::paddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("palignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::palignr(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pand(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pandn(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendvb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendvb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pblendw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pclmulqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pclmulqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestri(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestri(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpestrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpeqw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpgtw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistri(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistri(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pcmpistrm(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("pextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrb(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrb(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrw(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrw(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pextrw(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phaddw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phminposuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phminposuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("phsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::phsubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw(const class asmjit::x86::Mm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxub(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxud(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmaxuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminub(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminud(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pminuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovmskb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovmskb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovmskb(const class asmjit::x86::Gp &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovmskb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovmskb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovmskb(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovsxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmovzxwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmullw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmuludq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("por", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::por(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psadbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslld(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pslldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pslldq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psllw(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrad(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psraw(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufhw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshuflw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshuflw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("pshufw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pshufw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psignw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrld(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrldq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlq(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw(const class asmjit::x86::Mm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psrlw(const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubsw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubusw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("psubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::psubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptest(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ptest(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckhwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpckldq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklqdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("punpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::punpcklwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pxor(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("roundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("roundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::roundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("rsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("rsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::rsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("shufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("shufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::shufps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("subss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::subss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpckhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("unpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::unpcklps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("xorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::xorps(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pavgusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pavgusb(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2id", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2id, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2id(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2id", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2id, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2id(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2iw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2iw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2iw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pf2iw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2iw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pf2iw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfadd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfadd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpeq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpeq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpeq(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpeq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpeq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpeq(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpge(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpge", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpge, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpge(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpgt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpgt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpgt(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfcmpgt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpgt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfcmpgt(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmax", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmax(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmax", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmax, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmax(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmin(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmin", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmin, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmin(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmul(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfmul", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmul, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfmul(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfpnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfpnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfpnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfpnacc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfpnacc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfpnacc(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcp(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcp", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcp, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcp(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit2(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpit2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpit2(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpv(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrcpv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrcpv(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqit1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqit1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqit1(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrt(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrt", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrt, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrt(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrtv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrtv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrtv(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfrsqrtv", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrtv, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfrsqrtv(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsub(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsub(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsubr(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pfsubr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsubr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pfsubr(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pi2fw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pi2fw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrw(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pmulhrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pmulhrw(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pswapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pswapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pswapd(const class asmjit::x86::Mm &, const class asmjit::x86::Mm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("pswapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pswapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::pswapd(const class asmjit::x86::Mm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("emms", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::emms, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::emms() --> unsigned int");
		cl.def("femms", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::femms, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::femms() --> unsigned int");
		cl.def("aesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdec(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdec(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdeclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesdeclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenc(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenc(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesenclast(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("aeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("aeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::aeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha1msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1nexte", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1nexte, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1nexte(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1nexte", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1nexte, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1nexte(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha1rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1rnds4(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha1rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha1rnds4(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha256msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg1(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256msg2(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("sha256rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256rnds2(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("sha256rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sha256rnds2(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineinvqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineinvqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8affineqb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("gf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8mulb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("gf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::gf2p8mulb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kaddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kaddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kaddw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandnw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandnw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kandw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kandw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovb(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovd(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovq(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw(const class asmjit::x86::KReg &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw(const class asmjit::x86::Mem &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kmovw(const class asmjit::x86::Gp &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("knotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::knotw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("korb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::korb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::korb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kord(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("korq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::korq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::korq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kortestb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kortestd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kortestq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kortestw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kortestw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("korw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::korw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::korw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftlb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftld(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftlq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftlw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kshiftrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kshiftrw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("ktestb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ktestd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ktestq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ktestw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ktestw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("kunpckbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kunpckbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kunpckbw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kunpckdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kunpckdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kunpckdq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kunpckwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kunpckwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kunpckwd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnorb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnorb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnorb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnord(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnorq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxnorw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnorw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxnorw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxorb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxorb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxorb(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxord(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxorq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("kxorw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxorw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::kxorw(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("v4fmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fmaddps(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("v4fmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("v4fnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fnmaddps(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("v4fnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::v4fnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdec(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdec", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdec, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdec(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdeclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesdeclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdeclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesdeclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenc(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenc(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesenclast", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenclast, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesenclast(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vaesimc", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesimc, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaesimc(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vaeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaeskeygenassist", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaeskeygenassist, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaeskeygenassist(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("valignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("valignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("valignq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("valignq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::valignq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vandnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandnpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandnps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandnps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vandps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vblendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vblendvps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vblendvps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vbroadcastf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf128(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti128(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcasti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcasti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastsd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastsd(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastss(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbroadcastss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbroadcastss(const class asmjit::x86::Vec &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmppd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpps(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsd(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpss(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompresspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompresspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompresspd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompresspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompresspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompresspd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompressps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompressps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompressps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcompressps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompressps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcompressps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtne2ps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtne2ps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtne2ps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtne2ps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtne2ps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtne2ps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtneps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneps2bf16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneps2bf16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneps2bf16(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtps2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2ph(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsd2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttpd2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttpd2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttps2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttps2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsd2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsd2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttss2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttss2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtusi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdbpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdbpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdbpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdbpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdbpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdbpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdivpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdpbf16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpbf16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpbf16ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdpbf16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpbf16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpbf16ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vdpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vexp2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexp2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexp2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexp2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexp2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vexpandps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vexpandps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vextractf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf128(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf32x8(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x2(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractf64x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti128(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti32x8(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x2(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextracti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextracti64x4(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractps(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vextractps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vextractps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfixupimmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfixupimmss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfixupimmss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasspd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasspd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasspd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasspd(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassps(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassps(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssd(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssd(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassss(const class asmjit::x86::KReg &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassss(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherdpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherdpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherdps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherdps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherdps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherpf0dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf0dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf0qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf0qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf0qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherpf1qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherpf1qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vgatherqpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherqpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgatherqps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgatherqps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgatherqps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexppd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexppd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexppd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexppd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineinvqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineinvqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineinvqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineinvqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8affineqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8affineqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8mulb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgf2p8mulb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8mulb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgf2p8mulb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vhsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vhsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vinsertf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertf64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertf64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti32x8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti32x8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinserti64x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinserti64x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vinsertps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vinsertps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vlddqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vlddqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vlddqu(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vldmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vldmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vldmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vmaskmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovdqu(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaskmovps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaskmovps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovapd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovapd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovapd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovapd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovapd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovaps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovaps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovaps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovaps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovaps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovddup(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovddup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovddup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovddup(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa32(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa32(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa32(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa64(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa64(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqa64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqa64(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu16(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu16(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu16", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu16, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu16(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu32(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu32(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu32", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu32, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu32(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu64(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu64(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu64", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu64, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu64(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu8(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu8(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovdqu8", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu8, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovdqu8(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovhlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovlhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlhps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlpd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovlpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlpd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlps(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovlps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovlps(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovmskpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovmskpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovmskpd(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovmskps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovmskps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovmskps(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntdq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntdqa", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntdqa, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntdqa(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovntps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovntps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovshdup(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovshdup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovshdup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovshdup(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsldup(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsldup", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsldup, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsldup(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovss(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovupd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovupd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovupd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovupd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovupd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovups(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovups(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovups", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovups, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovups(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vmpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vmulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vp2intersectd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp2intersectd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectd(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp2intersectq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp2intersectq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp2intersectq(const class asmjit::x86::KReg &, const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vp4dpwssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp4dpwssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp4dpwssd(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vp4dpwssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp4dpwssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vp4dpwssds(const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Zmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpabsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpabsw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpackssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackssdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackssdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackssdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackssdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpacksswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpacksswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpacksswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpacksswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpacksswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpacksswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackusdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackusdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackuswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpackuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpackuswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpalignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpalignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpalignr(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpalignr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpalignr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpalignr(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpand(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpand", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpand, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpand(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandn(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandn", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandn, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandn(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandnq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandnq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpavgw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpavgw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendmw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendvb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendvb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendvb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendvb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpblendw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpblendw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpbroadcastb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastb(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastd(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastmb2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastmb2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastmb2q(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastmw2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastmw2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastmw2d(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastq(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpbroadcastw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpbroadcastw(const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpclmulqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpclmulqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpclmulqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpclmulqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpeqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpeqw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestri(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpestri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestri(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestrm(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpestrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpestrm(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"), pybind11::arg("o5"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpgtw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpgtw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistri(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpistri", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistri, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistri(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistrm(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpistrm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistrm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpistrm(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpub(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpub(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpud(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpud(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpuw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmpw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmpw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcompressb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcompressw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcompressw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpconflictq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpconflictq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpdpbusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vperm2f128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2f128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2f128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vperm2f128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2f128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2f128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vperm2i128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2i128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2i128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vperm2i128", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2i128, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vperm2i128(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpermb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermi2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermi2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermilps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermilps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2b(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2d(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2q(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermt2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermt2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpermw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpexpandb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpexpandw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpexpandw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrb(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrb(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrd(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrd(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrq(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrq(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrw(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpextrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpextrw(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpgatherqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpgatherqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpgatherqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphaddw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphminposuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphminposuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphminposuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphminposuw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vphsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpinsrw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpinsrw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vplzcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vplzcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vplzcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vplzcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vplzcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmadd52huq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52huq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52huq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmadd52huq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52huq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52huq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmadd52luq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52luq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52luq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmadd52luq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52luq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadd52luq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaddwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaskmovq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaskmovq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmaxuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmaxuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminub(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpminuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpminuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmovb2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovb2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovb2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovd2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovd2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovd2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovdw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2b", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2b, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2b(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2d", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2d, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2d(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2q", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2q, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2q(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovm2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovm2w(const class asmjit::x86::Vec &, const class asmjit::x86::KReg &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovmskb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovmskb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovmskb(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovq2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovq2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovq2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovqw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsdw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsqw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovswb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovsxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovsxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusdw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovusqw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovusqw(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovuswb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovuswb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovuswb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovuswb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovw2m", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovw2m, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovw2m(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovwb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovwb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovwb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovwb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovwb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovwb(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxbw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxdq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmovzxwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmovzxwq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmuldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhrsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhrsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhrsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhrsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhuw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulhw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmulld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmulld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmullw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmullw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmultishiftqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmultishiftqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmultishiftqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmultishiftqb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmultishiftqb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmultishiftqb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuludq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpmuludq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuludq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmuludq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpopcntb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntb(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpopcntw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpopcntw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vporq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vporq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vporq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vporq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vporq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vporq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprold", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprold, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprold(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprold", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprold, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprold(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprolvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprolvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprord(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprorvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprorvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsadbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsadbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsadbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpscatterdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterdd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpscatterdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterdq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpscatterqd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterqd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterqd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpscatterqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpscatterqq(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpshldd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshldw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshldw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshldw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshrdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshrdw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshrdw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufbitqmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufbitqmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufbitqmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufbitqmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufbitqmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufbitqmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufhw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshufhw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufhw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshufhw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshuflw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshuflw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshuflw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshuflw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsignw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsignw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslld(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpslldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpslldq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsllw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsllw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrad(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsravw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsravw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsraw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsraw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrld(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrldq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlvw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlvw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsrlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsrlw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubsw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubsw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusb(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubusw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubusw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpsubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpsubw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpternlogd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpternlogd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpternlogq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpternlogq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpternlogq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptest(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vptest", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptest, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptest(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vptestmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmb(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmd(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmq(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vptestnmw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vptestnmw(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckhwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckhwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklbw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpckldq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckldq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpckldq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklqdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklqdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklqdq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpunpcklwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpunpcklwd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxor", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxor, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxor(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxord", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxord, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxord(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxorq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpxorq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxorq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpxorq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrangepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangeps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangeps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangeps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangeps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangeps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangeps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrangess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrangess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrcp14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcp28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcp28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcp28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducepd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducess", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducess, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducess(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscalepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalepd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscalepd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalepd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalepd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscaleps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscaleps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscalesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscalesd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscaless", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaless, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaless(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscaless", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaless, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaless(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vroundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vroundss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vroundss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrsqrt14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt14sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt14ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt14ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrt28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28sd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrt28ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrt28ss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscatterdpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterdpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterdpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vscatterdps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterdps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterdps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vscatterpf0dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf0dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf0qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf0qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf0qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1dpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1dpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1dpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1dps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1dps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1dps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1qpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1qpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1qpd(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterpf1qps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1qps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterpf1qps(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vscatterqpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterqpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterqpd(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vscatterqps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterqps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscatterqps(const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vshuff32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshuff32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshuff64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshuff64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshuff64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi32x4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi32x4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi32x4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufi64x2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi64x2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufi64x2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vshufps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vshufps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vsqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vstmxcsr", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vstmxcsr, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vstmxcsr(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("vsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vtestpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vtestpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vtestps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vtestps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vtestps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomisd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomisd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomisd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomiss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomiss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomiss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vunpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpckhpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpckhps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpckhps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vunpcklps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vunpcklps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vxorps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vxorps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vzeroall", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vzeroall, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vzeroall() --> unsigned int");
		cl.def("vzeroupper", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vzeroupper, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vzeroupper() --> unsigned int");
		cl.def("vfmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmaddsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmaddss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmaddss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfnmsubss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsubss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vfrczpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczpd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczpd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczpd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczpd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczsd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczsd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczsd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczss(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vfrczss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfrczss(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpcmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmov(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmov(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcmov", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmov, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcmov(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomub", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomub, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomub(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomud(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpcomuw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpcomuw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpermil2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vpermil2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpermil2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"), pybind11::arg("o4"));
		cl.def("vphaddbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadddq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadddq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadddq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddubw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddubw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddudq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddudq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddudq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphaddudq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddudq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphaddudq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphadduwq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphadduwq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubbw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubbw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubbw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubdq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubdq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubdq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vphsubwd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubwd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vphsubwd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpmacsdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdqh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdqh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdqh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssdql", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdql, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssdql(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmacssww", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssww, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmacssww(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcsswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcsswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcsswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpmadcswd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcswd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpmadcswd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpperm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpperm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpperm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpperm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpperm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpperm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vpperm", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpperm, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpperm(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotd(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vprotw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vprotw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshab", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshab, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshab(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshab", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshab, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshab(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshab", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshab, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshab(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshad(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshad(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshad", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshad, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshad(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshaw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshaw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlb(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlb", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlb, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlb(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshld(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshld", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshld, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshld(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlq(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpshlw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpshlw(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vbcstnebf162ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbcstnebf162ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbcstnebf162ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vbcstnesh2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbcstnesh2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vbcstnesh2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneebf162ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneebf162ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneebf162ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneeph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneeph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneeph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneobf162ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneobf162ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneobf162ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtneoph2ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneoph2ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtneoph2ps(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vpdpbssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbssds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbssds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpbuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpbuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwsuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwsuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwusds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwusds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuud(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vpdpwuuds", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuuds, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vpdpwuuds(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsha512msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsha512msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsha512msg1(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsha512msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsha512msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsha512msg2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsha512rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsha512rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsha512rnds2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg1(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg1(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3msg2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3msg2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm3rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3rnds2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vsm3rnds2", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3rnds2, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm3rnds2(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vsm4key4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4key4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4key4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm4key4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4key4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4key4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm4rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4rnds4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsm4rnds4", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4rnds4, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsm4rnds4(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vaddsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vaddsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcmpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpph(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpph(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsh(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcmpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcmpsh(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vcomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomish(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcomish(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtdq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtdq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtpd2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtpd2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2pd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2pd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2pd(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2psx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2psx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2psx(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2psx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2psx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2psx(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2phx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2phx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2phx(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtps2phx", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2phx, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtps2phx(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsd2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsd2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsd2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2sd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2sd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2sd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2sd(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsh2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2ss(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2ss", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2ss, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2ss(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtsi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtsi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtsi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtss2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtss2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvttph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2dq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2dq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2dq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2qq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2qq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2qq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2udq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2udq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2udq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uqq", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uqq, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uqq(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2uw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2uw(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttph2w", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2w, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttph2w(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2si", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2si, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2si(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvttsh2usi", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2usi, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvttsh2usi(const class asmjit::x86::Gp &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtudq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtudq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuqq2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuqq2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtusi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtusi2sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtusi2sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vcvtuw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtuw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtuw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vcvtw2ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtw2ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vcvtw2ph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vdivph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vdivsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vdivsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfcmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfcmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmaddsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmaddsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmsubadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmsubadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfmulcsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfmulcsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmadd231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmadd231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub132sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub132sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub213sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub213sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231ph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231ph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfnmsub231sh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfnmsub231sh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassph(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclassph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclassph(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssh(const class asmjit::x86::KReg &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vfpclasssh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vfpclasssh(const class asmjit::x86::KReg &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vgetexpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetexpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetexpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vgetmantsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vgetmantsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vgetmantsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vmaxph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmaxsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmaxsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vminsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vminsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsh(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsh(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovsh(const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw(const class asmjit::x86::Gp &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw(const class asmjit::x86::Mem &, const class asmjit::x86::Xmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw(const class asmjit::x86::Xmm &, const class asmjit::x86::Gp &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmovw", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmovw(const class asmjit::x86::Xmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vmulph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vmulsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vmulsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrcpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrcpsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrcpsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreduceph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreduceph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vreducesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vreducesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vreducesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscaleph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscaleph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscaleph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrndscalesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrndscalesh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrndscalesh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &, const class asmjit::Imm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"), pybind11::arg("o3"));
		cl.def("vrsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vrsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vrsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vrsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vscalefsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vscalefsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtph(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsqrtsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsqrtsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubph", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubph, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubph(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vsubsh", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsh, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vsubsh(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("vucomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomish(const class asmjit::x86::Vec &, const class asmjit::x86::Vec &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("vucomish", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomish, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::vucomish(const class asmjit::x86::Vec &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("ldtilecfg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ldtilecfg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::ldtilecfg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("sttilecfg", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sttilecfg, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::sttilecfg(const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"));
		cl.def("tileloadd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tileloadd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tileloadd(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tileloaddt1", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tileloaddt1, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tileloaddt1(const class asmjit::x86::Tmm &, const class asmjit::x86::Mem &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tilerelease", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)()) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tilerelease, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tilerelease() --> unsigned int");
		cl.def("tilestored", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Mem &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tilestored, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tilestored(const class asmjit::x86::Mem &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"));
		cl.def("tilezero", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tilezero, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tilezero(const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"));
		cl.def("tdpbf16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbf16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbf16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tcmmimfp16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tcmmimfp16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tcmmimfp16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tcmmrlfp16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tcmmrlfp16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tcmmrlfp16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpfp16ps", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpfp16ps, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpfp16ps(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbssd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbssd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbssd(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbsud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbsud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbsud(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbusd", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbusd, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbusd(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
		cl.def("tdpbuud", (unsigned int (asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::*)(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &)) &asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbuud, "C++: asmjit::x86::EmitterExplicitT<asmjit::x86::Compiler>::tdpbuud(const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &, const class asmjit::x86::Tmm &) --> unsigned int", pybind11::arg("o0"), pybind11::arg("o1"), pybind11::arg("o2"));
	}
}
